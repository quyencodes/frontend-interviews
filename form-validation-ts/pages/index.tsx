/*
https://bobbyhadz.com/blog/typescript-react-onchange-event-type
*/

import Head from 'next/head'
import { UserInput, FormInput } from '@custom/types'
import InputForm from '@components/InputForm'

import { useState } from 'react'

const initialState = {
  username: '',
  email: '',
  date: '',
  password: '',
  confirmPassword: '',
}

export default function Home() {
  const [userData, setUserData] = useState<UserInput>(initialState)

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    event.preventDefault()
    // console.log(event.target.name)
    setUserData((prev: UserInput) => {
      return { ...prev, [event.target.name]: event.target.value }
    })
    // console.log(`User is changing: ${event.target.value}`)
  }

  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event?.preventDefault()
    alert(`User submitted: ${JSON.stringify(userData, undefined, 2)}`)
  }

  const formData: Array<FormInput> = [
    {
      id: '0',
      name: 'username',
      type: 'text',
      label: 'Username',
      placeholder: 'Username',
      pattern: '^[a-zA-Z0-9]{3,16}$',
      errorMessage:
        "Username should be 3-16 characters and shouldn't include and special character!",
      required: true,
    },
    {
      id: '1',
      name: 'email',
      type: 'email',
      label: 'Email Address',
      placeholder: 'Email Address',
      errorMessage: 'It should be a valid email address!',
      required: true,
    },
    {
      id: '2',
      name: 'date',
      type: 'date',
      label: 'Date of birth',
      placeholder: 'mm/dd/yyyy',
      errorMessage: '',
      required: true,
    },
    {
      id: '3',
      name: 'password',
      type: 'password',
      label: 'Password',
      placeholder: 'Password',
      pattern:
        '^(?=.*[a-zA-Z])(?=.*d)(?=.*[!@#$%^&*()_+])[A-Za-zd][A-Za-zd!@#$%^&*()_+]{8,20}$',
      errorMessage:
        'Password should be 8-20 characters and include at least 1 letter, 1 number, and 1 special character',
      required: true,
    },
    {
      id: '4',
      name: 'confirmPassword',
      type: 'password',
      label: 'Confirm Password',
      placeholder: 'Confirm Password',
      pattern: userData.password,
      errorMessage: "Password don't match",
      required: true,
    },
  ]

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen w-full items-center justify-center bg-gradient-to-r from-sky-600 to-indigo-600 font-bodyFont">
        <div className="flex h-[800px] w-[600px] flex-col items-center rounded-lg border-2 border-solid border-black bg-white">
          <h1 className="text-bold m-2 p-4 text-3xl tracking-wide ">
            Register
          </h1>
          <form
            // onSubmit={(e) => handleSubmit(e)}
            onSubmit={(event) => console.log(event)}
            className="flex w-full flex-col items-center justify-between"
          >
            {formData.map((form, index) => (
              <InputForm
                key={index}
                formObj={form}
                handleChange={handleChange}
              />
            ))}
            <button
              className="pointer-cursor rounded-lg border-gray-700 bg-gray-700 p-4 text-white"
              type="submit"
            >
              Submit
            </button>
          </form>
        </div>
      </main>
    </>
  )
}
